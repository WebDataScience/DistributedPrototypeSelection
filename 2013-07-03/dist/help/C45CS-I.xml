<method>

	<name>C4.5 Cost Sensitive Decision Tree</name>

	<reference>  

		<ref>Ting, K.M. An instance-weighting method to induce cost-sensitive trees (2002) IEEE Transactions on Knowledge and Data Engineering, 14 (3), pp. 659-665. </ref>

	</reference>

	<generalDescription>  

		<type>Classification model by decision trees to use in imbalanced environments</type>

		<objective>To determine a decision tree that on the basis of answers to questions about the input attributes predicts correctly the value of the target attribute 
		taking into account the class distribution and the cost this distribution implies</objective>

		<howWork>C45CS is a decision tree generating algorithm that it induces classification rules in the form of decision trees from a set of given examples,
			weighting the instances of the input data to consider the associated costs.		

The decision tree is constructed top-down. In each step a test for the actual node is chosen (starting with the root node), which best separates the given examples by classes. 

C45CS is based on the original C45 algorithm.
</howWork>

		<parameterSpec>  

			<param>prune: is to prune or not prune the tree. It is a boolean value that determines if the algorithm applies a prune process after building the tree</param>
			<param>confidence: is the confidence level. It is a float value that determines what is the minimal confidence that must has a leaf in order to can be considered in the tree</param>
			<param>minItemsets is the minimum number of item-sets per leaf. It is an integer value that determines how much data instances must contain a leaf in order to can be created</param>
			<param>minimumExpectedCost: represents the use or not use of the Minimum Expected Cost Criterion in the tree</param>
				
		</parameterSpec>

		<properties>

			<continuous>Yes</continuous>

			<discretized>Yes</discretized>

			<integer>Yes</integer>

			<nominal>Yes</nominal>

			<valueLess>Yes</valueLess>

			<impreciseValue>No</impreciseValue>

		</properties>

	</generalDescription>

	<example>Problem type: Imbalanced
Method: C4.5 Cost Sensitive
Dataset: pimaImb
Training set: pimaImb-5-1tra.dat
Test set: pimaImb-5-1tst.dat
Test Show results: TSTImb-C45CS
Parameters: default values

After the execution of RunKeel.jar we can see into the experiment\results\Vis-Imb-Check folder the classification results for the test set:

Summary of data, Classifiers: pimaImb
Fold 0 : AUC=0.7261111111111112 N/C=0.0 
Global Classification Area Under the ROC Curve:
0.7124703004891685 
stddev Global Classification Area Under the ROC Curve:
0.015200853099105974 
Global N/C:
0.0 

We can also see the output and target classes for each case of the test set (result0.tst) in Experiment\Results\Imb-C45CS.pimaImb:

@relation pimaImb
@attribute Preg real [0.0, 17.0]
@attribute Plas real [0.0, 199.0]
@attribute Pres real [0.0, 122.0]
@attribute Skin real [0.0, 99.0]
@attribute Insu real [0.0, 846.0]
@attribute Mass real [0.0, 67.1]
@attribute Pedi real [0.078, 2.42]
@attribute Age real [21.0, 81.0]
@attribute Class {positive,negative}
@inputs Preg, Plas, Pres, Skin, Insu, Mass, Pedi, Age
@outputs Class
@data
positive negative
positive positive
positive positive
positive positive
positive negative
positive negative
negative negative
negative negative
negative negative
negative positive
negative positive
negative negative
negative negative
negative negative
negative positive
negative negative
negative negative
negative positive
negative negative
negative negative
negative negative
negative positive
positive positive
positive positive
positive positive
positive positive
...
</example>

</method>
