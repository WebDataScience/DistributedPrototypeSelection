<method>

	<name>Classification based on Predictive Association Rules (CPAR)</name>

	<reference>
		<ref>Xiaoxin Yin, Jiawei Han. CPAR: Classification based on Predictive Association Rules. </ref>
	</reference>

	<generalDescription>  

		<type>Classification model by association rules.</type>

		<objective>To combine the advantages of both associative classification and traditional rule-based classification by adopting a greedy algorithm to generate rules directly from training data.</objective>

		<howWork>
			CPAR inherits the basic idea of FOIL in rule generation and integrates the features of associative classification in predictive rule analysis.
			The algorithm CPAR uses a
			Moreover, CPAR employs the following features to further improve its accuracy and efficiency:
				(1) CPAR uses dynamic programming to avoid repeated calculation in rule generation; and 
				(2) when generating rules, instead of selecting only the best literal, all the close-to-the-best literals are selected so that important rules will not be missed.
			In PRM (Predictive Rule Mining), every rule is generated from the remaining dataset.
			Suppose an example t in the remaining dataset is covered by a rule r that is just generated. We are not sure whether r is the best rule for t because
				(1) r is generated by greedy algorithm; and 
				(2) r is generated from the remaining dataset instead of the whole dataset.
			In PRM, we also generate at least a certain number of rules for each example (depending on the weight decay factor "alpha"). However, these several rules are not necessarily the best rules for the reasons illustrated above.
			
			Here, CPAR is proposed. It stands in the middle between exhaustive and greedy algorithms and combines the advantages of both.
			CPAR builds rules by adding literals one by one, which is similar to PRM. However, instead of ignoring all literals except the best one, CPAR keeps all close-to-the-best literals during the rule building process.
			By doing so, CPAR can select more than one literal at the same time and build several rules simultaneously.
		</howWork>

		<parameterSpec>  
			<param>Delta = Number of rules combining for every example.</param>
			<param>Minimum Gain = Is the threshold for the gain value to create the rules.</param>
			<param>alpha = Weight decay factor. </param>
			<param>K = Number of rules used in prediction.</param>
		</parameterSpec>

		<properties>
			<continuous>Yes</continuous>
			<discretized>Yes</discretized>
			<integer>Yes</integer>
			<nominal>Yes</nominal>
			<valueLess>No</valueLess>
			<impreciseValue>No</impreciseValue>
		</properties>

	</generalDescription>

	<example>
	Problem type: Associative Classification 
	Method: CPAR
	Dataset: pima
	Training set: pima-10-1tra.dat
	Test set: pima-10-1tst.dat
	Test Show results: Vis-Clas-Check
	Parameters: 
		default values

After the execution of RunKeel.jar we can see into the experiment\results\Vis-Clas-Check folder the classification results for the test and train set:

TEST RESULTS
============
Classifier= 
Fold 0 : CORRECT=0.7142857142857143 N/C=0.0 
Fold 1 : CORRECT=0.7792207792207793 N/C=0.0 
Fold 2 : CORRECT=0.7402597402597403 N/C=0.0 
Fold 3 : CORRECT=0.6623376623376623 N/C=0.0 
Fold 4 : CORRECT=0.7142857142857143 N/C=0.0 
Fold 5 : CORRECT=0.7662337662337663 N/C=0.0 
Fold 6 : CORRECT=0.7662337662337663 N/C=0.0 
Fold 7 : CORRECT=0.8181818181818181 N/C=0.0 
Fold 8 : CORRECT=0.7894736842105263 N/C=0.0 
Fold 9 : CORRECT=0.6710526315789473 N/C=0.0 
Global Classification Error + N/C:
0.25784347231715654 
stddev Global Classification Error + N/C:
0.04851383437677495 
Correctly classified:
0.7421565276828435 
Global N/C:
0.0 

TRAIN RESULTS
============
Classifier= 
Summary of data, Classifiers: 
Fold 0 : CORRECT=0.7945007235890015 N/C=0.0 
Fold 1 : CORRECT=0.8017366136034733 N/C=0.0 
Fold 2 : CORRECT=0.7814761215629522 N/C=0.0 
Fold 3 : CORRECT=0.7988422575976846 N/C=0.0 
Fold 4 : CORRECT=0.7988422575976846 N/C=0.0 
Fold 5 : CORRECT=0.7858176555716353 N/C=0.0 
Fold 6 : CORRECT=0.7930535455861071 N/C=0.0 
Fold 7 : CORRECT=0.8002894356005789 N/C=0.0 
Fold 8 : CORRECT=0.7976878612716762 N/C=0.0 
Fold 9 : CORRECT=0.7976878612716762 N/C=0.0 
Global Classification Error + N/C:
0.205006566674753 
stddev Global Classification Error + N/C:
0.006233646146757117 
Correctly classified:
0.794993433325247 
Global N/C:
0.0 


We can also see the output and target classes for each case of the test set (result0.tst) in Experiment\Results\Clas-CPAR:

@relation   .a/pima/pima
@attribute 'preg'{0,1}
@attribute 'plas'{0,1,2,3}
@attribute 'pres'{0}
@attribute 'skin'{0}
@attribute 'insu'{0,1,2}
@attribute 'mass'{0,1}
@attribute 'pedi'{0}
@attribute 'age'{0,1}
@attribute 'class'{tested_negative,tested_positive}
@inputs 'preg','plas','pres','skin','insu','mass','pedi','age'
@outputs 'class'
@data
tested_positive tested_negative
tested_positive tested_negative
tested_positive tested_negative
tested_positive tested_negative
tested_positive tested_positive
tested_positive tested_negative
tested_positive tested_negative
tested_negative tested_negative
tested_negative tested_positive
tested_positive tested_positive
tested_positive tested_negative
tested_positive tested_positive
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_positive tested_positive
tested_positive tested_negative
tested_positive tested_positive
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_positive
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_positive tested_positive
tested_positive tested_positive
tested_positive tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_positive tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_positive tested_positive
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_positive tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_positive
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_positive tested_negative
tested_positive tested_positive
tested_positive tested_positive
tested_positive tested_negative
tested_negative tested_positive
tested_negative tested_positive
tested_negative tested_negative
tested_negative tested_negative
tested_positive tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_positive
tested_negative tested_negative
tested_negative tested_negative
tested_positive tested_positive
tested_positive tested_negative
tested_positive tested_positive
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_negative
tested_negative tested_positive
tested_negative tested_negative
tested_negative tested_negative

@Number of rules: 143 Number of Antecedents by rule: 2.852112676056338

1: 'preg' IS 0 AND 'plas' IS 0 AND 'mass' IS 0: tested_negative
2: 'preg' IS 0 AND 'plas' IS 0 AND 'mass' IS 0: tested_negative
3: 'plas' IS 0 AND 'mass' IS 0 AND 'age' IS 0: tested_negative
4: 'plas' IS 0 AND 'mass' IS 0 AND 'age' IS 0: tested_negative
5: 'plas' IS 0 AND 'insu' IS 0 AND 'age' IS 0: tested_negative
6: 'plas' IS 0 AND 'insu' IS 0 AND 'age' IS 0: tested_negative
7: 'plas' IS 0 AND 'insu' IS 0 AND 'age' IS 0: tested_negative
8: 'plas' IS 0 AND 'insu' IS 0 AND 'age' IS 0: tested_negative
9: 'plas' IS 0 AND 'insu' IS 0 AND 'mass' IS 0: tested_negative
10: 'plas' IS 0 AND 'insu' IS 0 AND 'mass' IS 0: tested_negative
11: 'plas' IS 0 AND 'insu' IS 0 AND 'mass' IS 0: tested_negative
12: 'plas' IS 0 AND 'insu' IS 1 AND 'mass' IS 0: tested_negative
13: 'plas' IS 1 AND 'insu' IS 2 AND 'age' IS 0: tested_negative
14: 'plas' IS 1 AND 'insu' IS 2 AND 'age' IS 0: tested_negative
15: 'plas' IS 1 AND 'insu' IS 2 AND 'age' IS 0: tested_negative
16: 'plas' IS 1 AND 'insu' IS 2 AND 'age' IS 0: tested_negative
17: 'plas' IS 1 AND 'insu' IS 2 AND 'age' IS 0: tested_negative
18: 'plas' IS 1 AND 'insu' IS 2 AND 'age' IS 0: tested_negative
19: 'preg' IS 0 AND 'plas' IS 1 AND 'insu' IS 2 AND 'age' IS 0: tested_negative
20: 'plas' IS 1 AND 'mass' IS 0 AND 'age' IS 0: tested_negative
21: 'plas' IS 1 AND 'mass' IS 0 AND 'age' IS 0: tested_negative
22: 'mass' IS 0 AND 'age' IS 0: tested_negative
23: 'plas' IS 0 AND 'insu' IS 1: tested_negative
24: 'plas' IS 0 AND 'insu' IS 1: tested_negative
25: 'plas' IS 0 AND 'insu' IS 1: tested_negative
26: 'insu' IS 2 AND 'mass' IS 0 AND 'age' IS 0: tested_negative
27: 'preg' IS 0 AND 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 0: tested_negative
28: 'insu' IS 2 AND 'mass' IS 0 AND 'age' IS 0: tested_negative
29: 'preg' IS 0 AND 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 0: tested_negative
30: 'insu' IS 2 AND 'mass' IS 0 AND 'age' IS 0: tested_negative
31: 'plas' IS 0 AND 'insu' IS 1 AND 'age' IS 0: tested_negative
32: 'preg' IS 0 AND 'plas' IS 0 AND 'insu' IS 1 AND 'age' IS 1: tested_negative
33: 'preg' IS 0 AND 'plas' IS 1 AND 'mass' IS 0: tested_negative
34: 'preg' IS 1 AND 'plas' IS 3 AND 'insu' IS 2 AND 'age' IS 1: tested_positive
35: 'plas' IS 0: tested_negative
36: 'plas' IS 0: tested_negative
37: 'plas' IS 0: tested_negative
38: 'plas' IS 0: tested_negative
39: 'plas' IS 0: tested_negative
40: 'plas' IS 0 AND 'insu' IS 0: tested_negative
41: 'plas' IS 0 AND 'insu' IS 0: tested_negative
42: 'plas' IS 3 AND 'insu' IS 2 AND 'age' IS 1: tested_positive
43: 'plas' IS 3 AND 'insu' IS 2 AND 'age' IS 1: tested_positive
44: 'plas' IS 3 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
45: 'plas' IS 3 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
46: 'plas' IS 3 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
47: 'plas' IS 3 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
48: 'plas' IS 3 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
49: 'plas' IS 3 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
50: 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 0: tested_negative
51: 'plas' IS 1 AND 'mass' IS 0: tested_negative
52: 'plas' IS 1 AND 'mass' IS 0: tested_negative
53: 'plas' IS 3 AND 'insu' IS 2 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
54: 'preg' IS 0 AND 'plas' IS 1 AND 'age' IS 0: tested_negative
55: 'preg' IS 0 AND 'plas' IS 1 AND 'age' IS 0: tested_negative
56: 'plas' IS 3 AND 'mass' IS 1: tested_positive
57: 'plas' IS 3 AND 'mass' IS 1: tested_positive
58: 'plas' IS 3 AND 'mass' IS 1: tested_positive
59: 'insu' IS 0 AND 'mass' IS 0: tested_negative
60: 'preg' IS 0 AND 'insu' IS 1: tested_negative
61: 'plas' IS 1 AND 'insu' IS 1: tested_negative
62: 'plas' IS 3 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
63: 'plas' IS 3 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
64: 'plas' IS 3 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
65: 'plas' IS 3 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
66: 'insu' IS 1: tested_negative
67: 'plas' IS 3 AND 'age' IS 1: tested_positive
68: 'plas' IS 3 AND 'age' IS 1: tested_positive
69: 'plas' IS 3 AND 'age' IS 1: tested_positive
70: 'preg' IS 0 AND 'plas' IS 1 AND 'insu' IS 1 AND 'age' IS 1: tested_negative
71: 'plas' IS 1 AND 'insu' IS 1 AND 'mass' IS 1: tested_negative
72: 'plas' IS 1 AND 'insu' IS 1 AND 'age' IS 1: tested_negative
73: 'plas' IS 1 AND 'insu' IS 1 AND 'age' IS 1: tested_negative
74: 'preg' IS 1 AND 'insu' IS 2 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
75: 'preg' IS 0 AND 'plas' IS 1: tested_negative
76: 'preg' IS 1 AND 'insu' IS 2 AND 'age' IS 1: tested_positive
77: 'plas' IS 3 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
78: 'preg' IS 0 AND 'plas' IS 1 AND 'insu' IS 0: tested_negative
79: 'preg' IS 0 AND 'plas' IS 1 AND 'insu' IS 0: tested_negative
80: 'preg' IS 0 AND 'plas' IS 2 AND 'mass' IS 0: tested_negative
81: 'preg' IS 1 AND 'plas' IS 2 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
82: 'preg' IS 1 AND 'plas' IS 2 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
83: 'plas' IS 1: tested_negative
84: 'plas' IS 1: tested_negative
85: 'plas' IS 2 AND 'mass' IS 0: tested_negative
86: 'preg' IS 0 AND 'plas' IS 2 AND 'insu' IS 2 AND 'age' IS 0: tested_negative
87: 'preg' IS 0 AND 'plas' IS 2 AND 'insu' IS 2 AND 'age' IS 0: tested_negative
88: 'preg' IS 0: tested_negative
89: 'plas' IS 3 AND 'mass' IS 0 AND 'age' IS 1: tested_positive
90: 'preg' IS 1 AND 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 1: tested_positive
91: 'plas' IS 2 AND 'mass' IS 0 AND 'age' IS 1: tested_negative
92: 'plas' IS 2 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
93: 'insu' IS 2 AND 'age' IS 1: tested_positive
94: 'preg' IS 1 AND 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
95: 'preg' IS 1 AND 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
96: 'preg' IS 1 AND 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
97: 'plas' IS 2 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
98: 'preg' IS 1 AND 'plas' IS 0 AND 'insu' IS 2 AND 'age' IS 1: tested_positive
99: 'preg' IS 1 AND 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
100: 'plas' IS 2 AND 'insu' IS 0 AND 'mass' IS 1: tested_positive
101: 'plas' IS 1 AND 'insu' IS 2 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
102: 'plas' IS 1 AND 'insu' IS 2 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
103: 'preg' IS 1 AND 'plas' IS 2 AND 'mass' IS 0: tested_negative
104: 'preg' IS 0 AND 'plas' IS 2 AND 'age' IS 0: tested_negative
105: 'insu' IS 0: tested_negative
106: 'preg' IS 0 AND 'plas' IS 2 AND 'insu' IS 2: tested_negative
107: 'plas' IS 1 AND 'insu' IS 2 AND 'age' IS 1: tested_positive
108: 'plas' IS 1 AND 'insu' IS 2 AND 'age' IS 1: tested_positive
109: 'preg' IS 0 AND 'plas' IS 2 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
110: 'plas' IS 2 AND 'age' IS 1: tested_positive
111: 'plas' IS 2 AND 'mass' IS 1: tested_positive
112: 'mass' IS 1 AND 'age' IS 1: tested_positive
113: 'preg' IS 0 AND 'plas' IS 2: tested_negative
114: 'plas' IS 2 AND 'insu' IS 1: tested_negative
115: 'plas' IS 2 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
116: 'plas' IS 2 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
117: 'plas' IS 2 AND 'insu' IS 0: tested_positive
118: 'insu' IS 0 AND 'age' IS 1: tested_negative
119: 'plas' IS 2 AND 'insu' IS 2 AND 'mass' IS 1: tested_positive
120: 'plas' IS 2 AND 'insu' IS 1 AND 'age' IS 1: tested_positive
121: 'plas' IS 2 AND 'insu' IS 2: tested_negative
122: 'plas' IS 2 AND 'insu' IS 0 AND 'age' IS 0: tested_positive
123: 'plas' IS 2: tested_positive
124: 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
125: 'plas' IS 2: tested_negative
126: 'mass' IS 1: tested_positive
127: 'mass' IS 1: tested_positive
128: 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 1: tested_positive
129: 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 1: tested_positive
130: 'plas' IS 1 AND 'insu' IS 0 AND 'mass' IS 1: tested_positive
131: 'plas' IS 1 AND 'age' IS 1: tested_positive
132: 'plas' IS 2 AND 'insu' IS 1 AND 'mass' IS 0: tested_positive
133: 'plas' IS 2 AND 'insu' IS 1 AND 'mass' IS 0: tested_positive
134: 'plas' IS 2 AND 'insu' IS 2 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
135: 'preg' IS 1 AND 'mass' IS 0 AND 'age' IS 1: tested_positive
136: 'preg' IS 0 AND 'plas' IS 0 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
137: 'preg' IS 1 AND 'plas' IS 1 AND 'mass' IS 0 AND 'age' IS 1: tested_positive
138: 'plas' IS 2 AND 'mass' IS 0: tested_positive
139: 'plas' IS 0 AND 'insu' IS 0 AND 'mass' IS 1 AND 'age' IS 1: tested_positive
140: 'mass' IS 0 AND 'age' IS 1: tested_positive
141: 'plas' IS 1 AND 'insu' IS 1 AND 'mass' IS 1 AND 'age' IS 0: tested_positive
142: 'insu' IS 1 AND 'mass' IS 1 AND 'age' IS 0: tested_positive

	</example>

</method>