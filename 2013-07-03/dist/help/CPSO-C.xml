<method>

	<name>
        Constricted Particle Swarm Optimization
    </name>

	<reference>
    <ref>
    Tiago Sousa, Arlindo Silva and Ana Neves.
    Particle Swarm based Data Mining Algorithms for classiﬁcation tasks.
    Parallel Computing 30 (2004) 767–783 
	</ref>
	</reference>

	<generalDescription>  

		<type>
            PSO-based classifier
        </type>
        
		<objective> 
            To perform a classification task by means of a PSO-based algorithm.
        </objective>

		<howWork>
            This methods is a PSO algorithm whose velocity function type is constricted.
		</howWork>
        
		<parameterSpec>  
  			<param>     1st parameter: seed of the random numbers generator</param>
            <param>     2nd parameter: Number of particles</param>
            <param>     3rd parameter: convergence radius</param>
            <param>     4th parameter: weights upper limit</param>
            <param>     5th parameter: Maximun uncovered instances</param>
            <param>     6th parameter: Indifference threshold</param>
            <param>     7th parameter: Constriction coefficient</param>
            <param>     8th parameter: Convergence platform width</param>
		</parameterSpec> 
		
		<properties>
			<continuous>Yes</continuous>
			<discretized>Yes</discretized>
			<integer>Yes</integer>
			<nominal>Yes</nominal>
			<valueLess>Yes</valueLess>
			<impreciseValue>No</impreciseValue>
		</properties>
        
	</generalDescription>

	<example>

        Problem type: Classification
        Method: Clas-CPSO
        Dataset: iris (10 fold cross validation run)
        Training set: iris-10-1tra.dat to iris-10-10tra.dat 
        Test set: iris-10-1tst.dat to iris-10-10tst.dat
        Test Show results: Vis-Clas-Check
        Parameters: default values
		
        After the execution of RunKeel.jar we can see into the results/Vis-Clas-Check/TSTClas-CPSO
        folder the classification results for the test set:
        
        
        TEST RESULTS
        ============
        Classifier= 
        Fold 0 : CORRECT=0.9333333333333333 N/C=0.0 
        Fold 1 : CORRECT=0.9333333333333333 N/C=0.0 
        Fold 2 : CORRECT=0.8 N/C=0.0 
        Fold 3 : CORRECT=0.8666666666666667 N/C=0.0 
        Fold 4 : CORRECT=0.9333333333333333 N/C=0.0 
        Fold 5 : CORRECT=0.9333333333333333 N/C=0.0 
        Fold 6 : CORRECT=1.0 N/C=0.0 
        Fold 7 : CORRECT=0.7333333333333334 N/C=0.0 
        Fold 8 : CORRECT=1.0 N/C=0.0 
        Fold 9 : CORRECT=0.8 N/C=0.0 
        Global Classification Error + N/C:
        0.10666666666666666 
        stddev Global Classification Error + N/C:
        0.08537498983243799 
        Correctly classified:
        0.8933333333333333 
        Global N/C:
        0.0 

        TRAIN RESULTS
        ============
        Classifier= 
        Summary of data, Classifiers: 
        Fold 0 : CORRECT=0.962962962962963 N/C=0.0 
        Fold 1 : CORRECT=0.9777777777777777 N/C=0.0 
        Fold 2 : CORRECT=0.9777777777777777 N/C=0.0 
        Fold 3 : CORRECT=0.9851851851851852 N/C=0.0 
        Fold 4 : CORRECT=0.9777777777777777 N/C=0.0 
        Fold 5 : CORRECT=0.9481481481481482 N/C=0.0 
        Fold 6 : CORRECT=0.9481481481481482 N/C=0.0 
        Fold 7 : CORRECT=0.962962962962963 N/C=0.0 
        Fold 8 : CORRECT=0.9777777777777777 N/C=0.0 
        Fold 9 : CORRECT=0.9851851851851852 N/C=0.0 
        Global Classification Error + N/C:
        0.029629629629629627 
        stddev Global Classification Error + N/C:
        0.013250773199998752 
        Correctly classified:
        0.9703703703703703 
        Global N/C:
        0.0
	</example>
		
</method>
