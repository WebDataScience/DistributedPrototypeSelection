<method>

	<name>Statistical Normality Shapiro Wilk test</name>

	<reference>  

<ref>S.S. Shapiro and M.B. Wilk. An analysis of variance test for normality (complete samples). Biometrika 52:(3-4) (1965) 591-611.</ref>

	</reference>

	<generalDescription>  

		<type>Statistical two sample means comparation  using the Shapiro-Wilk test by mean of StatTestClasSW algorithm.</type>

		<objective>Execution of StatTestClasSW test for comparing two classifier methods performance.</objective>

		<howWork>
Stat-Clas-ShapiroWilk is a method for comparing the performance of two classification algorithms using statistics techniques. It can be used in k-folds and 5x2 cross validation training  experiments.
Stat-Clas-ShapiroWilk is associated to the training and testing results of the two models in an experiment that are to be compared. Once those models has been trained and tested, the Stat-Clas-ShapiroWilk takes place. 
The process calculates the percentage of correctly classified examples for each of the partitions results. The statistical sample includes all of those error measures for each method to be compared. Then the Shapiro-Wilk test is executed with the Null hypothesis as true if  error distribution is normal for each method.
</howWork>

		<parameterSpec>  
<param>signlevel: a value in the range (0,1). Default value:  0.95. The significance level represents the probability of erroneous rejecting the NULL Hypothesis.</param>
		</parameterSpec>

		<properties>
		</properties>

	</generalDescription>

	<example>Problem type: Classification 
Methods to compare: Clas-ADLinear vs Clas-KNN
Dataset: cleveland
Type of partitions: k-fold, k=10
Default parameters

After the execution of RunKeel.jar we can see into the ./results/Stat-Clas-ShapiroWilk/TSTClas-ADLinear vs Clas-KNN/ folder the results0s0.stat file:

Shapiro-Wilk test, Classification
Classification error in each cada fold:
Algorithm = 0
Fold 0 : 0.36666666666666664 
Fold 1 : 0.36666666666666664 
Fold 2 : 0.26666666666666666 
Fold 3 : 0.3333333333333333 
Fold 4 : 0.5 
Fold 5 : 0.5 
Fold 6 : 0.45161290322580644 
Fold 7 : 0.45161290322580644 
Fold 8 : 0.23333333333333334 
Fold 9 : 0.5483870967741935 
Algorithm = 1
Fold 0 : 0.4666666666666667 
Fold 1 : 0.5666666666666667 
Fold 2 : 0.4 
Fold 3 : 0.4666666666666667 
Fold 4 : 0.3333333333333333 
Fold 5 : 0.5666666666666667 
Fold 6 : 0.3870967741935484 
Fold 7 : 0.5483870967741935 
Fold 8 : 0.4666666666666667 
Fold 9 : 0.4838709677419355 
Null hypothesis, error distribution is normal
Output=0: There is no evidence against H0 for algorithm: 0 output: 0
Null hypothesis, error distribution is normal
Output=0: There is no evidence against H0 for algorithm: 1 output: 0
p-value:
0.6556373753249726 0.43322704262262696</example>

</method>
