<method>

	<name>Friedman Test and Post-Hoc Procedures for multiple comparisons</name>

	<reference>  

	<ref>J. Zar, Biostatistical Analysis, Prentice Hall, Upper Saddle River, New Jersey, 1999.</ref>
	<ref>D. Sheskin, Handbook of parametric and nonparametric statistical procedures. Chapman and Hall/CRC, 2003. </ref>
	<ref>J. Demsar, Statistical comparisons of classifiers over multiple data sets. Journal of Machine Learning Research 7 (2006) 1-30</ref>

	</reference>

	<generalDescription>  

		<type>Application of non-parametric tests.</type>

		<objective>Execution of the non-parametric Friedman test and post-hoc tests for comparison of the global performance of several regression methods.</objective>

		<howWork>
		Friedman test is a non-parametric equivalent of the test of repeated-measures ANOVA. It computes the ranking of the observed results for algorithm 
		for each data-set, assigning to the best of them the ranking 1, and to the worst the ranking k. We may apply different post-hoc test in order to detect
		significant differences between the algorithms. Specifically we may choose among Iman and Davenport test, Nemenyi test, Holm test, Shaffer test or Bergman test.
		</howWork>

		<parameterSpec>  
		<param>Apply-Iman-Davenport: It can takes the value YES or NO if the user desires to apply the Iman and Davenport test</param>
		<param>Apply-Nemenyi: It can takes the value YES or NO if the user desires to apply the Nemenyi test</param>
		<param>Apply-Holm: It can takes the value YES or NO if the user desires to apply the Holm test</param>
		<param>Apply-Shaffer: It can takes the value YES or NO if the user desires to apply the Shaffer test</param>
		<param>Apply-Bergman: It can takes the value YES or NO if the user desires to apply the Bergman test</param>
		</parameterSpec>

		<properties>
		</properties>

	</generalDescription>

	<example>Problem type: Regression 
Methods to compare: Regr-MLPerceptronConj-Grad vs Regr-LinearLMS vs Regr-Fuzzy-WM
Datasets: daily-electric-energy, Ele1, friedman, machine-cpu
Default Parameters (all the post-hoc tests are applied)
Type of partitions: k-fold, k=10

After the execution of RunKeel.jar we can see into the ./results/Stat-Regr-Multiple/TSTRegr-MLPerceptronConj-GradvsRegr-LinearLMSvsRegr-Fuzzy-WM folder the results0s0.stat file:

Multiple Test, Regression
Regression error in each foldfold:
Algorithm = Regr-MLPerceptronConj-Grad
Fold 0 : 0.13358883028152593 
Fold 1 : 0.17175051992536386 
Fold 2 : 0.15476569415752764 
Fold 3 : 0.13145726997608692 
Fold 4 : 0.2515275751755297 
Fold 5 : 0.1584639781278857 
Fold 6 : 0.112863992835126 
Fold 7 : 0.13594607912315596 
Fold 8 : 0.19115595561944598 
Fold 9 : 0.17337698297007884 
Mean Value: 0.16148968781917267
Algorithm = Regr-MLPerceptronConj-GradRegr-LinearLMS
Fold 0 : 0.13276224210953563 
Fold 1 : 0.18120381885508868 
Fold 2 : 0.182370405802494 
Fold 3 : 0.16173335412244483 
Fold 4 : 0.22907270759939843 
Fold 5 : 0.1523434941533297 
Fold 6 : 0.11773693421451363 
Fold 7 : 0.14663031088893072 
Fold 8 : 0.221371320386903 
Fold 9 : 0.17624151293476897 
Mean Value: 0.17014661010674076
Algorithm = Regr-MLPerceptronConj-GradRegr-LinearLMSRegr-Fuzzy-WM
Fold 0 : 0.25075271468396515 
Fold 1 : 0.2818377224596541 
Fold 2 : 0.302755945842815 
Fold 3 : 0.13328313725389387 
Fold 4 : 0.27549722538369426 
Fold 5 : 0.17672332649230282 
Fold 6 : 0.1941539042725541 
Fold 7 : 0.16673710401211578 
Fold 8 : 0.19748037076941652 
Fold 9 : 0.19001148599258205 
Mean Value: 0.21692329371629934


and a LaTeX output file "output.tex" where the results of the application of the test are provided.

</example>

</method>
