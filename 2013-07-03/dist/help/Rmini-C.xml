<method>

	<name>R-MINI</name>

	<reference>  

		<ref>S. J. Hong. R-MINI: An Iterative Approach for Generating Minimal Rules from Examples. IEEE Transactions on Knowledge and Data Engineering, 9:5 (1997), 709-717.</ref>

	</reference>

	<generalDescription>  

		<type>Classification model by covering rules (separate &amp; conquer).</type>

		<objective>To determine a set of rules (inductive rules) that on the basis of answers to questions about the input attributes predicts correctly the value of the target attribute.</objective>

		<howWork>R-MINI combines several phases of expansion, reduction and reformulation of rules within an iterative process. The algorithm works with cubes (rules defined as bit vectors) and ensures a set of rules with a maximun completeness and consistency in training data. However, the generalization over non-viewed examples is not as good as other rule induction methods.
		</howWork>

		<parameterSpec>  

		</parameterSpec>

		<properties>

			<continuous>No</continuous>

			<discretized>Yes</discretized>

			<integer>No</integer>

			<nominal>Yes</nominal>

			<valueLess>Yes</valueLess>

			<impreciseValue>No</impreciseValue>

		</properties>

	</generalDescription>

	<example>Problem type: Classification 
Method: R-Mini
Dataset: haberman
Training set: haberman-10-1tra.dat
Test set: haberman-10-1tst.dat
Test Show results: StatChekCL
Parameters: 
	Max_Iter = 5

After the execution of RunKeel.jar we can see into the experiment\results\StatCheckCL folder the classification results for the test set:

TEST RESULTS
============
Classifier= 
Fold 0 : CORRECT=0.7741935483870968 N/C=0.0 
Global Classification Error + N/C:
0.2258064516129032
Correctly classified:
0.7741935483870968
Global N/C:
0.0 

We can also see the output and target classes for each case of the test set (result0.tst) in Experiment\Results\Clas-AQ-15:

@relation  haberman
@attribute Age integer[30,83]
@attribute Year integer[58,69]
@attribute Positive integer[0,52]
@attribute class{positive,negative}
@inputs Age,Year,Positive
@outputs class
@data
negative negative
negative negative
negative negative
negative negative
negative negative
negative positive
negative negative
positive negative
negative negative
positive negative
negative negative
negative negative
negative negative
negative negative
negative negative
negative negative
negative negative
negative negative
positive positive
negative positive
negative negative
positive positive
positive positive
positive positive
negative negative
negative negative
negative negative
positive negative
positive negative
negative negative
positive negative

</example>

</method>