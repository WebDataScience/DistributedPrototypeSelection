<method>

	<name>Sequential Backward Search using Inconsistent Examples Pairs measure</name>

	<reference>  

		<ref>H. Liu and L. Yu. "Toward Integrating Feature Selection Algorithms for Classification and Clustering", 
			IEEE Trans. onKnowledge and Data Engineering,17(4), 491-502, 2005.</ref>
		<ref>H. Liu y H. Motoda, Feature Selection for Knowledge Discovery and Data Mining, Kluwer Academic Publishers, 1998.</ref>

	</reference>

	<generalDescription>  

		<type>Non Evolutionary Filter Stochastic method</type>

		<objective>Feature Selection. This method allows search to follow feature subsets that are randomly generated</objective>

		<howWork>Sequential Forward Search is a greedy algorithm that starts with all features selected and deselects the most least
			promising feature according to the measure in each step. The algorithm stops when an inconsistency threshold is
			reached (and no additional features can be substracted).
</howWork>

		<parameterSpec>  

			<param>threshold: inconsistency threshold. This measures the maximum inconsistency allowed in the final dataset.</param>

		</parameterSpec>

		<properties>

			<continuous>Yes</continuous>

			<discretized>Yes</discretized>

			<integer>Yes</integer>

			<nominal>Yes</nominal>

			<valueLess>No</valueLess>

			<impreciseValue>No</impreciseValue>

		</properties>

	</generalDescription>

	<example>

Problem type: Preprocess
Method: SBS-IEP-FS
Dataset: Car
Training set: car-10-1tra.dat
Test set: car-10-1tst.dat
Parameters: default values


After the execution of RunKeel.jar we can see the training and test datasets modified only with the selected features.

And the extra file with the classification error in test validation result0e0.txt:

result0e0.txt

RESULTS generated at Sun Jul 04 20:00:41 CEST 2010 
--------------------------------------------------
Algorithm Name: SBS (IEP)

PARTITION Filename: ../datasets/car/car-10-1tra.dat
---------------

Features selected: 
Buying - Maint - Doors - Persons - Lug_boot - Safety - 

6 features of 6

Error in test (using train for prediction): 0.2023121387283237
Error in test (using test for prediction): 0.19653179190751446
---------------



</example>

</method>