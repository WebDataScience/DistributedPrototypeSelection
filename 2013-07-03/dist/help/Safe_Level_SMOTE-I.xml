<method>

	<name>Safe Level SMOTE</name>

	<reference>  

		<ref>C. Bunkhumpornpat, K. Sinapiromsaran, C. Lursinsap. Safe-level-SMOTE: Safe-level-synthetic minority over-sampling technique for handling the class imbalanced problem. Pacific-Asia Conference on Knowledge Discovery and Data Mining (PAKDD-09).  Lecture Notes in Artificial Intelligence 5476, Springer-Verlag 2005, Bangkok (Thailand, 2009) 475-482</ref>

	</reference>

	<generalDescription>  

		<type>Preprocess Method. Data Rebalancing. Oversampling Method</type>

		<objective>Balance the class distribution for changing the data space when applying usual classifiers in imbalanced domains</objective>

		<howWork>Safe Level SMOTE generate positive data instances from other instances in the original dataset selecting k nearest neighbors and using them to perform arithmetical
		operations to generate the new instance</howWork>

		<parameterSpec>  

			<param>Number of neighbors: Integer value. Number of nearest instances considered to generate a new positive example using the K-Nearest Neighbor Rule</param>
			<param>Type of SMOTE: both if we consider as neighbors instances from both classes, minority if we consider as neighbors instances from the minority class and ASMO if we consider as neighbors instances from the majority class</param>
			<param>Balancing: YES, if we want de data class distribution completely balanced, NO otherwise</param>
			<param>Quantity of generated examples: if the Balancing option is not selected, proportion of examples from the majority class that the minority class has to reach</param>
			<param>Distance Function: K-NN implements two distance functions. a) Euclidean with normalized attributed and b) HVDM (see paper D.R. Wilson, T.R. Martinez. Reduction Tecniques For Instance-Based Learning Algorithms. Machine Learning 38:3 (2000) 257-286.)</param>
			<param>Type of Interpolation: way of interpolating the neighbors instances to create a synthetic instance. Standard is the original interpolation proposed.</param>
			<param>Alpha: alpha parameter for the BLX-alpha interpolation</param>
			<param>Mu: mu parameter for the SBX interpolation</param>
			
		</parameterSpec>

		<properties>

			<continuous>Yes</continuous>

			<discretized>Yes</discretized>

			<integer>Yes</integer>

			<nominal>Yes</nominal>

			<valueLess>No</valueLess>

			<impreciseValue>No</impreciseValue>

		</properties>

	</generalDescription>

	<example>Problem type: Imbalanced
Method: Safe Level SMOTE
Dataset: pimaImb
Training set: pimaImb-5-1tra.dat
Parameters: default values

We can see output set in Experiment\datasets\Reb-SafeLevel_SMOTEs0.pimaImb-5-1tra.dat:

@relation pimaImb
@attribute Preg real [0.0, 17.0]
@attribute Plas real [0.0, 199.0]
@attribute Pres real [0.0, 122.0]
@attribute Skin real [0.0, 99.0]
@attribute Insu real [0.0, 846.0]
@attribute Mass real [0.0, 67.1]
@attribute Pedi real [0.078, 2.42]
@attribute Age real [21.0, 81.0]
@attribute Class {positive, negative}
@data
14.0,175.0,62.0,30.0,0.0,33.6,0.212,38.0,positive
4.0,146.0,78.0,0.0,0.0,38.5,0.52,67.0,positive
15.0,136.0,70.0,32.0,110.0,37.1,0.153,43.0,positive
5.0,116.0,74.0,29.0,0.0,32.3,0.66,35.0,positive
6.0,0.0,68.0,41.0,0.0,39.0,0.727,41.0,positive
3.0,173.0,78.0,39.0,185.0,33.8,0.97,31.0,positive
3.0,162.0,52.0,38.0,0.0,37.2,0.652,24.0,positive
4.0,146.0,92.0,0.0,0.0,31.2,0.539,61.0,positive
2.0,155.0,52.0,27.0,540.0,38.7,0.24,25.0,positive
9.0,145.0,80.0,46.0,130.0,37.9,0.637,40.0,positive
6.0,162.0,62.0,0.0,0.0,24.3,0.178,50.0,positive
9.0,112.0,82.0,32.0,175.0,34.2,0.26,36.0,positive
10.0,101.0,86.0,37.0,0.0,45.6,1.136,38.0,positive
1.0,144.0,82.0,46.0,180.0,46.1,0.335,46.0,positive
1.0,168.0,88.0,29.0,0.0,35.0,0.905,52.0,positive
0.0,146.0,70.0,0.0,0.0,37.9,0.334,28.0,positive
2.0,102.0,86.0,36.0,120.0,45.5,0.127,23.0,positive
...
2.0,146.0,70.0,38.0,360.0,28.0,0.337,29.0,positive
10.0,148.0,84.0,48.0,237.0,37.6,1.001,51.0,positive
3.0,176.0,86.0,27.0,156.0,33.3,1.154,52.0,positive
1.0,128.0,82.0,17.0,183.0,27.5,0.115,22.0,positive
3.0,102.0,74.0,0.0,0.0,29.5,0.121,32.0,positive
6.0,125.0,68.0,30.0,120.0,30.0,0.464,32.0,positive
6.0,102.0,90.0,39.0,0.0,35.7,0.674,28.0,positive
9.0,120.0,72.0,22.0,56.0,20.8,0.733,48.0,positive
0.0,105.0,84.0,0.0,0.0,27.9,0.741,62.0,positive
4.0,114.0,65.0,0.0,0.0,21.9,0.432,37.0,positive
</example>

</method>