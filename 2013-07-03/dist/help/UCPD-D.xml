<method>

	<name>Unsupervised Correlation Preserving Discretization</name>

	<reference>  

		<ref>Mehta, S., Parthasarathy, S., and Yang, H. 2005. Toward Unsupervised Correlation Preserving Discretization. IEEE Trans. on Knowl. and Data Eng. 17, 9 (Sep. 2005), 1174-1185.</ref>

	</reference>

	<generalDescription>  

		<type>Discretization of real attributes</type>

		<objective>To transform a set of numerical variables into nominal variables. Input variables may be either real or integer.</objective>

		<howWork>
			
			The present algorithm is characterized by following features:

			- unsupervised, because it does not use the class attribute information.
			- static, because discretization is completed prior to the learning task.
			- global, because it discretizes all continuous attributes at same time.
			- top-down, because it starts with an empty list of cutpoints and adds cutpoints at each step.
			- direct or incremental, because the number of cutpoints for each continuous attribute is defined prior to the discretization or not according to the version of the algorithm.

			This algorithm uses the distribution of both categorical and continuous attributes and the underlying correlation structure in the data set to obtain the discrete intervals. To do this, it uses PCA, that helps to identify the correlation structure among the continuous attributes and also association patterns to capture correlations when there are also categorical attributes. Both let work with missing data, and PCA also helps to deal with data set with very high dimensionality because it allows to reduce the number of dimensions.
			
			First, the algorithm normalizes each continuous attribute and it does a centralization of each one on their mean. Next, it does the PCA over the continuous attributes, and selects the most significative eigenvectors basing on the eigenvalues and then, it gets a new set of data, projecting each original continuous dimension over the selected eigenvectors.
			
			Next, it discretizes each eigendimension separately. First, it determines the number of cutpoints of each eigendimension basing on the eigenvalues of each eigenvector. Once it done, it considers two methods to discretize each eigendimension. If there are categorical attributes, it discretizes each eigendimension in uniform frecuency intervals, then it computes frequent itemsets for each interval and, last, it merges intervals if both are enough similars (it needs a meassure of similarity). If there are not categorical attributes, it uses a clustering method over the data to split the eigendimension and get the cutpoints.
			
			Finally, it computes which eigenvector dimension correlates most with each original dimension and it projects the cutpoints of each eigendimension to the original dimensions using either KNN or any projection method.
			
		</howWork>

		<parameterSpec>

			<param>maxIntervals: maximal number of intervals of the discretization.</param>
			
			<param>minIntervals: minimal number of intervals of the discretization.</param>
			
			<param>mapType: used projection type.</param>
			
			<param>Neighborhood: with KNN projection, it is the size of the neighborhood.</param>
			
			<param>minSupport: minimal number of examples to cover by the frequent itemsets. </param>
			
			<param>mergedThreshold: threshold in order to merge two intervals.</param>
			
			<param>scalingFactor: scaling factor to compute the similarity between two intervals.</param>
			
			<param>useDiscrete: "true" to take into account categorical attributes for the discretization also.</param>

		</parameterSpec>

		<properties>

			<continuous>Yes</continuous>

			<discretized>Yes</discretized>

			<integer>Yes</integer>

			<nominal>No</nominal>

			<valueLess>Yes</valueLess>

			<impreciseValue>Yes</impreciseValue>

		</properties>

	</generalDescription>

	<example>Problem type: Classification 
Method: Unsupervised Correlation Preserving Discretization
Dataset: Iris Plants

Input Training set: Iris-5x2-1tra.dat
Input Test set: Iris-5x2-1tst.dat
Output Training set: result0.tra
Output Test set: result0.tst
Descriptor: result0e0.txt

Parameters: default values

After the execution of RunKeel.jar we can see into the experiment/results/Disc-UCPD/iris folder the discretization results; 3 files are generated in this folder:


File result0.tra:
	It contains the discretization result of training set.

@relation Iris_Plants_Database
@attribute sepalLength {0,1,2,3,4,5,6,7,8,9}
@attribute sepalWidth {0,1,2,3,4,5,6,7,8,9}
@attribute petalLength {0,1,2,3,4,5,6,7,8,9}
@attribute petalWidth {0,1,2,3,4,5,6,7,8,9}
@attribute class{Iris-setosa,Iris-versicolor,Iris-virginica}
@data
2,5,0,0,Iris-setosa
1,4,0,0,Iris-setosa
0,4,0,0,Iris-setosa
3,7,1,1,Iris-setosa
0,5,0,0,Iris-setosa
2,5,0,0,Iris-setosa
3,6,0,0,Iris-setosa
1,5,1,0,Iris-setosa
0,3,0,0,Iris-setosa
4,9,0,1,Iris-setosa
3,7,0,1,Iris-setosa
4,7,1,0,Iris-setosa
3,5,1,0,Iris-setosa
2,6,0,1,Iris-setosa
0,6,0,0,Iris-setosa
2,5,1,1,Iris-setosa
2,5,0,0,Iris-setosa
2,8,0,0,Iris-setosa
3,9,0,0,Iris-setosa
2,4,0,0,Iris-setosa
2,5,0,0,Iris-setosa
2,5,0,0,Iris-setosa
0,4,0,0,Iris-setosa
2,5,1,2,Iris-setosa
2,7,1,1,Iris-setosa
7,4,6,5,Iris-versicolor
7,4,6,5,Iris-versicolor
3,0,5,5,Iris-versicolor
4,2,6,5,Iris-versicolor
5,4,6,6,Iris-versicolor
1,0,4,3,Iris-versicolor
5,3,6,5,Iris-versicolor
7,4,5,5,Iris-versicolor
4,2,5,3,Iris-versicolor
5,0,6,5,Iris-versicolor
4,4,6,7,Iris-versicolor
5,2,5,5,Iris-versicolor
5,2,6,4,Iris-versicolor
6,3,5,5,Iris-versicolor
7,2,6,5,Iris-versicolor
3,3,6,5,Iris-versicolor
7,4,6,5,Iris-versicolor
5,0,5,5,Iris-versicolor
3,1,5,5,Iris-versicolor
4,1,5,4,Iris-versicolor
2,0,4,3,Iris-versicolor
4,3,5,5,Iris-versicolor
5,3,5,5,Iris-versicolor
2,1,3,4,Iris-versicolor
4,2,5,5,Iris-versicolor
5,4,8,9,Iris-virginica
4,2,7,7,Iris-virginica
8,3,8,8,Iris-virginica
6,3,8,8,Iris-virginica
9,3,9,8,Iris-virginica
8,3,9,7,Iris-virginica
6,4,7,7,Iris-virginica
4,2,7,9,Iris-virginica
5,0,7,5,Iris-virginica
9,2,9,7,Iris-virginica
7,4,8,8,Iris-virginica
8,4,8,7,Iris-virginica
5,2,6,7,Iris-virginica
6,2,8,8,Iris-virginica
5,1,8,5,Iris-virginica
9,3,8,9,Iris-virginica
5,3,6,7,Iris-virginica
7,4,7,8,Iris-virginica
7,4,8,9,Iris-virginica
7,4,8,9,Iris-virginica
7,3,7,9,Iris-virginica
5,1,7,7,Iris-virginica
6,3,7,7,Iris-virginica
5,5,7,9,Iris-virginica
4,3,7,7,Iris-virginica


File result0.tst:
	It contains the discretization result of testing set.

@relation Iris_Plants_Database
@attribute sepalLength {0,1,2,3,4,5,6,7,8,9}
@attribute sepalWidth {0,1,2,3,4,5,6,7,8,9}
@attribute petalLength {0,1,2,3,4,5,6,7,8,9}
@attribute petalWidth {0,1,2,3,4,5,6,7,8,9}
@attribute class{Iris-setosa,Iris-versicolor,Iris-virginica}
@data
1,3,0,0,Iris-setosa
2,6,0,0,Iris-setosa
0,3,0,0,Iris-setosa
1,4,0,0,Iris-setosa
1,3,0,0,Iris-setosa
4,8,0,0,Iris-setosa
2,5,0,0,Iris-setosa
2,7,0,0,Iris-setosa
2,4,1,1,Iris-setosa
1,5,1,0,Iris-setosa
2,3,1,0,Iris-setosa
2,5,0,0,Iris-setosa
1,4,1,0,Iris-setosa
1,4,1,0,Iris-setosa
3,5,0,1,Iris-setosa
1,4,0,0,Iris-setosa
3,5,0,0,Iris-setosa
1,4,0,0,Iris-setosa
0,3,0,0,Iris-setosa
0,0,0,0,Iris-setosa
1,3,0,0,Iris-setosa
2,7,1,0,Iris-setosa
0,4,0,0,Iris-setosa
2,6,0,0,Iris-setosa
2,4,0,0,Iris-setosa
6,4,6,5,Iris-versicolor
6,2,6,5,Iris-versicolor
6,3,6,5,Iris-versicolor
2,2,5,5,Iris-versicolor
2,0,4,3,Iris-versicolor
4,3,5,5,Iris-versicolor
5,0,5,3,Iris-versicolor
3,3,4,5,Iris-versicolor
3,3,6,5,Iris-versicolor
3,1,5,4,Iris-versicolor
5,1,6,5,Iris-versicolor
6,3,5,5,Iris-versicolor
7,3,7,6,Iris-versicolor
5,3,6,5,Iris-versicolor
4,1,4,3,Iris-versicolor
3,0,4,4,Iris-versicolor
3,0,4,3,Iris-versicolor
4,2,5,4,Iris-versicolor
5,2,7,6,Iris-versicolor
5,5,6,6,Iris-versicolor
3,3,5,5,Iris-versicolor
3,1,5,4,Iris-versicolor
5,3,6,5,Iris-versicolor
3,2,5,5,Iris-versicolor
4,3,5,4,Iris-versicolor
5,3,8,7,Iris-virginica
1,1,6,6,Iris-virginica
7,1,8,7,Iris-virginica
8,6,8,9,Iris-virginica
6,2,7,7,Iris-virginica
7,3,7,8,Iris-virginica
4,1,7,7,Iris-virginica
6,4,7,9,Iris-virginica
6,3,7,7,Iris-virginica
9,7,9,8,Iris-virginica
9,1,9,9,Iris-virginica
7,4,8,9,Iris-virginica
3,2,6,7,Iris-virginica
5,2,6,7,Iris-virginica
5,3,6,7,Iris-virginica
8,3,8,6,Iris-virginica
9,2,8,7,Iris-virginica
9,7,9,7,Iris-virginica
6,2,8,8,Iris-virginica
5,2,7,5,Iris-virginica
5,5,8,9,Iris-virginica
6,4,7,7,Iris-virginica
7,4,8,9,Iris-virginica
7,4,7,9,Iris-virginica
4,2,7,7,Iris-virginica


File result0e0.txt:
	It contains the descriptor of cutting points used in the discretization.

Cut point 0 of attribute 0 : 4.64
Cut point 1 of attribute 0 : 4.9799999999999995
Cut point 2 of attribute 0 : 5.319999999999999
Cut point 3 of attribute 0 : 5.659999999999999
Cut point 4 of attribute 0 : 5.999999999999999
Cut point 5 of attribute 0 : 6.339999999999999
Cut point 6 of attribute 0 : 6.679999999999999
Cut point 7 of attribute 0 : 7.019999999999999
Cut point 8 of attribute 0 : 7.3599999999999985
Number of cut points of attribute 0 : 9
Cut point 0 of attribute 1 : 2.4200000000000004
Cut point 1 of attribute 1 : 2.6400000000000006
Cut point 2 of attribute 1 : 2.8600000000000008
Cut point 3 of attribute 1 : 3.080000000000001
Cut point 4 of attribute 1 : 3.300000000000001
Cut point 5 of attribute 1 : 3.5200000000000014
Cut point 6 of attribute 1 : 3.7400000000000015
Cut point 7 of attribute 1 : 3.9600000000000017
Cut point 8 of attribute 1 : 4.1800000000000015
Number of cut points of attribute 1 : 9
Cut point 0 of attribute 2 : 1.57
Cut point 1 of attribute 2 : 2.14
Cut point 2 of attribute 2 : 2.71
Cut point 3 of attribute 2 : 3.2800000000000002
Cut point 4 of attribute 2 : 3.8500000000000005
Cut point 5 of attribute 2 : 4.420000000000001
Cut point 6 of attribute 2 : 4.990000000000001
Cut point 7 of attribute 2 : 5.560000000000001
Cut point 8 of attribute 2 : 6.130000000000002
Number of cut points of attribute 2 : 9
Cut point 0 of attribute 3 : 0.33999999999999997
Cut point 1 of attribute 3 : 0.58
Cut point 2 of attribute 3 : 0.82
Cut point 3 of attribute 3 : 1.06
Cut point 4 of attribute 3 : 1.3
Cut point 5 of attribute 3 : 1.54
Cut point 6 of attribute 3 : 1.78
Cut point 7 of attribute 3 : 2.02
Cut point 8 of attribute 3 : 2.26
Number of cut points of attribute 3 : 9

</example>

</method>