<method>

	<name>StatTabularMO</name>

	<reference>  

<ref>Test de Wilconxon, http://www.fon.hum.uva.nl/Service/Statistics/Wilcoxon_Test.html</ref>
<ref>Test de Mann-Whitney, http://www.fact-index.com/m/ma/mann_whitney_u.html</ref>
<ref>Wilcoxon signed ranks, http://faculty.vassar.edu/lowry/ch12a.html</ref>
<ref>A. Mart&#xED;nez, C. Rodr&#xED;guez and R. Guti&#xE9;rrez, Inferencia Estad&#xED;stica, un enfoque cl&#xE1;sico,  Ed. Piramide.</ref>
<ref>J.P. Royston, Algorithm AS 181, Applied Statistics 31(2):176-180, 1982</ref>

	</reference>

	<generalDescription>  

		<type>Statistical method for comparing  regression models performance.</type>

		<objective>Statistical comparing of the performance of a regression model method. Statistical tests, like Wilcoxon signed ranks or Mann-Whitney u, are executed for comparing methods purposes.</objective>

		<howWork>
StatTabularMO is a method for comparing the performance of regression modelling algorithms using statistics techniques. It can be used in k-folds and 5x2 cross validation training  experiments.

StatTabularMO is associated to the training and testing results of all of the models in an experiment that are to be compared. Once those models has been trained and tested, the StatTabularMO takes place. 

The process calculates the mean square error for each of the partitions results. The statistical sample includes all of those error measures for each method to be compared.  

With the Royston implementation of the W test it is contrasted if error distributions are  normal for the samples to be compare. If the distributions are normal, then if the samples are of equal variance the t test is executed. If distributions are normal but they have different variances then the tvar test. Finally, if the samples are not normal, then the Wilcoxon test is executed. 

The statistical test are executed in order to find evidence to assert that the error distribution of the different regression methods are different or not. If they are different, then it can be stated which one is  of better performance.
</howWork>

		<parameterSpec>  
<param>RMS by algorithm and by fold: YES or NO, this table is produced or not.</param>
<param>Header size in previous table: number of lines in the title of each column. Null value means no header at all.</param>
<param>Data used in previous table: TEST-TRAIN or ONLY-TEST, a table for test data and train data has to be produced or only for test data.</param>
<param>Global Average and Variance: YES or NO, this table is produced or not.</param>
<param>Header size in previous table: number of lines in the title of each column. Null value means no header at all.</param>
<param>Data used in previous table: TEST-TRAIN or ONLY-TEST, a table for test data and train data has to be produced or only for test data.</param>

		</parameterSpec>

		<properties>
		</properties>

	</generalDescription>

	<example>Problem type: Regression 
Methods to compare: ModelLinearLMS vs ModelFuzzyWangMendel
Dataset: MachineCPU
Type of partitions: k-fold, k=10

After the execution of RunKeel.jar we can see into the ./results/StatTabularMO/TSTModelLinearLMSvsModelFuzzyWangMendel/ folder the results for the tested regression method: machinecpu_ByFoldByAlgorithm_s0.stat and Summary_s0.stat.

File machinecpu_ByFoldByAlgorithm_s0.stat:

TEST RESULTS

machinecpu,ModelLinearLMS,ModelPolCuadraticLMS
,Output (MSE),Output (MSE)
Fold0,6269.3119803267,19895.1342723521
Fold1,2147.2593482864,914.1738736216
Fold2,1995.9915937209,1861.5149495191
Fold3,8429.3033744732,39753.4902451968
Fold4,3753.6612296050,2945.8831111915
Fold5,1265.7508235004,1680.7732947226
Fold6,1378.2506816606,433.8694788523
Fold7,10369.5718468165,4352.1175503866
Fold8,13447.2044892425,5219.9345208663
Fold9,3784.4057951743,1185.1871498092


TRAIN RESULTS

machinecpu,ModelLinearLMS,ModelPolCuadraticLMS
,Output (MSE),Output (MSE)
Fold0,3257.4008331947,793.4548048664
Fold1,3638.8121543421,1125.9622150435
Fold2,3658.5387089614,1096.5429891227
Fold3,3009.6808166277,793.9280245391
Fold4,3506.6575570743,1026.6832075689
Fold5,3717.9659981403,1088.5354446010
Fold6,3716.3484233649,1179.9825504266
Fold7,3516.6773027302,988.7856399087
Fold8,2716.6152034492,944.4745150139
Fold9,3473.8292418227,1108.1094643893


File Summary_s0.stat:
------------------------------------------------------
Global Average and Variance
------------------------------------------------------


TEST RESULTS

DATASET,ModelLinearLMS,ModelLinearLMS,ModelPolCuadraticLMS,ModelPolCuadraticLMS
,Average (MSE), Variance (MSE),Average (MSE), Variance (MSE)
machinecpu,5.284071116281E03,1.600067864171E07,7.824207844652E03,1.427559803258E08

TRAIN RESULTS

DATASET,ModelLinearLMS,ModelLinearLMS,ModelPolCuadraticLMS,ModelPolCuadraticLMS
,Average (MSE), Variance (MSE),Average (MSE), Variance (MSE)
machinecpu,3.421252623971E03,9.906740216156E04,1.014645885548E03,1.640093200564E04
</example>

</method>
