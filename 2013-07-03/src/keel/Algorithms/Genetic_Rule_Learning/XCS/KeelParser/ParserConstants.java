/***********************************************************************

	This file is part of KEEL-software, the Data Mining tool for regression, 
	classification, clustering, pattern mining and so on.

	Copyright (C) 2004-2010
	
	F. Herrera (herrera@decsai.ugr.es)
    L. Sánchez (luciano@uniovi.es)
    J. Alcalá-Fdez (jalcala@decsai.ugr.es)
    S. García (sglopez@ujaen.es)
    A. Fernández (alberto.fernandez@ujaen.es)
    J. Luengo (julianlm@decsai.ugr.es)

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see http://www.gnu.org/licenses/
  
**********************************************************************/

/**
 * <p>
 * @author Written by Albert Orriols (La Salle, Ramón Llull University - Barcelona)  28/03/2004
 * @author Modified by Xavi Solé (La Salle, Ramón Llull University - Barcelona) 03/12/2008
 * @version 1.1
 * @since JDK1.2
 * </p>
 */


/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package keel.Algorithms.Genetic_Rule_Learning.XCS.KeelParser;

public interface ParserConstants {

  int EOF = 0;
  int COMENT = 6;
  int COM2 = 7;
  int PROBLEM = 8;
  int CLASSIFIER = 9;
  int PARAMETERS = 10;
  int INIT = 11;
  int GA = 12;
  int REPRESENTATION = 13;
  int STATISTICS = 14;
  int REDUCTION = 15;
  int BEGIN = 16;
  int END = 17;
  int XCSI = 18;
  int TEST = 19;
  int ALGORITHM = 20;
  int INPUTDATA = 21;
  int OUTPUTDATA = 22;
  int TYPEOFPROBLEM = 23;
  int NUMBEROFEXPLORES = 24;
  int SEED = 25;
  int EXPLORESBETWEENEXPLOITS = 26;
  int XCSRUN = 27;
  int TRAINFILE = 28;
  int POPULATIONFILE = 29;
  int PROBLEMTYPE = 30;
  int RUNTYPE = 31;
  int POPSIZE = 32;
  int ALPHA = 33;
  int BETA = 34;
  int GAMMA = 35;
  int DELTA = 36;
  int NU = 37;
  int THETA_MNA = 38;
  int THETA_DEL = 39;
  int THETA_SUB = 40;
  int EPSILON_0 = 41;
  int DOASSUBSUMPTION = 42;
  int PREDICTIONERRORREDUCTION = 43;
  int FITREDUCTION = 44;
  int INITIALPREDICITON = 45;
  int INITIALFITNESS = 46;
  int INITIALPERROR = 47;
  int PX = 48;
  int PM = 49;
  int THETA_GA = 50;
  int DOGASUBSUMPTION = 51;
  int TOURNAMENTSIZE = 52;
  int TYPEOFMUTATION = 53;
  int TYPEOFSELECTION = 54;
  int TYPEOFCROSSOVER = 55;
  int PERMITWITHINCROSSOVER = 56;
  int SELECTIONTYPE = 57;
  int CROSSOVERTYPE = 58;
  int MUTATIONTYPE = 59;
  int PDONTCARE = 60;
  int CLLENGTH = 61;
  int R_0 = 62;
  int L_0 = 63;
  int M_0 = 64;
  int XCSI_L0 = 65;
  int XCSI_M0 = 66;
  int XCSI_R0 = 67;
  int INTEGER = 68;
  int SPECIFY = 69;
  int DOSPECIFY = 70;
  int PSPECIFY = 71;
  int NSPECIFY = 72;
  int DOSTATISTICS = 73;
  int STATISTICFILEOUTNAME = 74;
  int STATISTICWINDOWSIZE = 75;
  int GETOPTIMALPOPULATION = 76;
  int OPTIMALPOPULATIONFILE = 77;
  int REALDRAWNPRECISION = 78;
  int DOTEST = 79;
  int TESTWINDOW = 80;
  int SEQUENTIALTEST = 81;
  int TESTFILE = 82;
  int NUMBEROFTESTEXAMPLES = 83;
  int DOREDUCTION = 84;
  int TYPEOFREDUCTION = 85;
  int INITREDUCTIONITERATION = 86;
  int REDUCTWINDOW = 87;
  int REDUCTEDRULESFILE = 88;
  int THETA_REDUCT = 89;
  int EPSILON_REDUCT = 90;
  int P_REDUCT = 91;
  int REDUCTIONTYPE = 92;
  int EQUALS = 93;
  int PCOMA = 94;
  int COBERT = 95;
  int CTANCAT = 96;
  int COLON = 97;
  int INT_CONST = 98;
  int BOOLEAN_CONST = 99;
  int CAR_CONST = 100;
  int REAL_CONST = 101;
  int CAD_CONST = 102;
  int IDENT = 103;
  int LLETRA = 104;
  int DIGIT = 105;
  int ERR_LEX = 106;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\b\"",
    "\"\\n\"",
    "\"\\r\"",
    "<COMENT>",
    "<COM2>",
    "\"problem\"",
    "\"classifier\"",
    "\"parameters\"",
    "\"init\"",
    "\"GA\"",
    "\"representation\"",
    "\"statistics\"",
    "\"reduction\"",
    "\"begin\"",
    "\"end\"",
    "\"XCSI\"",
    "\"test\"",
    "\"algorithm\"",
    "\"inputData\"",
    "\"outputData\"",
    "\"typeOfProblem\"",
    "\"numberOfExplores\"",
    "\"seed\"",
    "\"exploresBetweenExploits\"",
    "\"XCSRun\"",
    "\"trainFile\"",
    "\"populationFile\"",
    "<PROBLEMTYPE>",
    "<RUNTYPE>",
    "\"popsize\"",
    "\"alpha\"",
    "\"beta\"",
    "\"gamma\"",
    "\"delta\"",
    "\"nu\"",
    "\"theta_mna\"",
    "\"theta_del\"",
    "\"theta_sub\"",
    "\"epsilon_0\"",
    "\"doASSubsumption\"",
    "\"predictionErrorReduction\"",
    "\"fitReduction\"",
    "\"initialPrediction\"",
    "\"initialFitness\"",
    "\"initialPredictionError\"",
    "\"px\"",
    "\"pm\"",
    "\"theta_ga\"",
    "\"doGASubsumption\"",
    "\"tournamentSize\"",
    "\"typeOfMutation\"",
    "\"typeOfSelection\"",
    "\"typeOfCrossover\"",
    "\"permitWithinCrossover\"",
    "<SELECTIONTYPE>",
    "<CROSSOVERTYPE>",
    "<MUTATIONTYPE>",
    "\"pdontcare\"",
    "\"clLength\"",
    "\"r_0\"",
    "\"l_0\"",
    "\"m_0\"",
    "\"XCSI_l0\"",
    "\"XCSI_m0\"",
    "\"XCSI_r0\"",
    "\"integer\"",
    "\"specify\"",
    "\"dospecify\"",
    "\"pspecify\"",
    "\"nspecify\"",
    "\"doStatistics\"",
    "\"statisticFileOutName\"",
    "\"statisticWindowSize\"",
    "\"getOptimalPopulation\"",
    "\"optimalPopulationFile\"",
    "\"realDrawnPrecision\"",
    "\"doTest\"",
    "\"testWindow\"",
    "\"sequentialTest\"",
    "\"testFile\"",
    "\"numberOfTestExamples\"",
    "\"doReduction\"",
    "\"typeOfReduction\"",
    "\"initReductionIteration\"",
    "\"reductWindow\"",
    "\"reductedRulesFile\"",
    "\"theta_reduct\"",
    "\"epsilon_reduct\"",
    "\"Preduct\"",
    "<REDUCTIONTYPE>",
    "\"=\"",
    "\";\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "<INT_CONST>",
    "<BOOLEAN_CONST>",
    "<CAR_CONST>",
    "<REAL_CONST>",
    "<CAD_CONST>",
    "<IDENT>",
    "<LLETRA>",
    "<DIGIT>",
    "<ERR_LEX>",
  };

}

