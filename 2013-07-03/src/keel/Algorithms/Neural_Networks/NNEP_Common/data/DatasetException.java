/***********************************************************************

	This file is part of KEEL-software, the Data Mining tool for regression, 
	classification, clustering, pattern mining and so on.

	Copyright (C) 2004-2010
	
	F. Herrera (herrera@decsai.ugr.es)
    L. Sánchez (luciano@uniovi.es)
    J. Alcalá-Fdez (jalcala@decsai.ugr.es)
    S. García (sglopez@ujaen.es)
    A. Fernández (alberto.fernandez@ujaen.es)
    J. Luengo (julianlm@decsai.ugr.es)

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see http://www.gnu.org/licenses/
  
**********************************************************************/

package keel.Algorithms.Neural_Networks.NNEP_Common.data;

/**
 * <p>
 * @author Written by Sebastian Ventura (University of Cordoba) 17/07/2007
 * @version 0.1
 * @since JDK1.5
 * </p>
 */

public class DatasetException extends Exception 
{
	/**
	 * <p>
	 * Dataset exception
	 * </p>
	*/
	
	/////////////////////////////////////////////////////////////////
	// --------------------------------------- Serialization constant
	/////////////////////////////////////////////////////////////////

	/** Generated by Eclipse */
	
	private static final long serialVersionUID = 8935985820808732029L;

	/////////////////////////////////////////////////////////////////
	// ------------------------------------------------- Constructors
	/////////////////////////////////////////////////////////////////

	/**
	 * <p>
	 * Empty Constructor
	 * </p>
	 */	
	public DatasetException() 
	{
		super();
	}
	
	/**
	 * <p>
	 * Constructor that establishes the description
	 * </p>
	 * @param arg0 String with the description
	 */	
	public DatasetException(String arg0) 
	{
		super(arg0);
	}
	
	/**
	 * <p>
	 * Constructor that receives a Throwable object
	 * </p>
	 * @param arg0 Throwable object
	 */	
	public DatasetException(Throwable arg0) 
	{
		super(arg0);
	}
	
	/**
	 * <p>
	 * Constructor that receives a Throwable object and the description
	 * </p>
	 * @param arg0 String with the description
	 * @param arg1 Throwable object
	 */	
	public DatasetException(String arg0, Throwable arg1) 
	{
		super(arg0, arg1);
	}
}

